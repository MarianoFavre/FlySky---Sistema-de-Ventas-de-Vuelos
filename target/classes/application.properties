#Conexi�n MySql#
#ddl (lenguaje de definici�n de datos - estructura de la base de datos)
#spring.jpa.hibernate.ddl-auto= update
#spring.datasource.url = jdbc:mysql://localhost:3306/flysky_db?useSSL=false&serverTimeZone=UTC
#spring.datasource.username=root
#spring.datasource.password=admin
#spring.jpa.database-platform= org.hibernate.dialect.MySQL8Dialect
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

#Conexi�n H2#
spring.datasource.url= jdbc:h2:mem:testdb
#spring.h2.console.enabled= true #Muestra igual la consola de h2 en el navegador.
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name= org.h2.Driver
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.H2Dialect

#Propiedades para ambas conexiones#
#Es para que espere que JPA cree las tablas antes de ejecutar los scripts que est�n dentro de los archivos .sql.
#Esta propiedad se puede comentar despu�s de haber ejecutado por primera vez el proyecto.
spring.jpa.defer-datasource-initialization= true

#Si hay un archivo data.sql no hace falta colocar las siguiente propiedad referida a dicho archivo ya que Spring
# lo busca por defecto. Pero si hay un data.sql y colocamos esta propiedad referida a otro archivo .sql, no toma en
# cuenta el archivo data.sql(no lo ejecuta) sino que ejecuta el otro .sql. Si queremos que se ejecuten ambos debemos
# colocar esta propiedad para ambos archivos.
#spring.sql.init.data-locations= classpath:data1.sql

#Propiedad necesaria para MySql pero no para H2. Esta propiedad deber�a ser comentada despu�s de haber ejecutado por
# primera vez el proyecto para que no ejecuta el archivo .sql. AL HACER POST, PUT Y DELETE SE
# PRODUCEN CAMBIOS EN LAS TABLAS DE LA BASE DE DATOS si la propiedad est� comentada.
#spring.sql.init.mode= always